{"version":3,"sources":["../src/input.js"],"names":["getVars","input","vars","UNDEFINED_ERROR","Object","assign","e","match","exec","message","prompt","type","name","promptString","promptBoolean","value","question","response"],"mappings":";;;;;kBAGwBA,O;;AAHxB;;;;AACA;;;;;;;;AAEe,SAASA,OAAT,CAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B;AAC5C,MAAMC,kBAAkB,qCAAxB;AACAD,SAAOE,OAAOC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,CAAP;;AAEA,SAAO,IAAP,EAAa;AACX,QAAI;AACF,0BAAKD,KAAL,EAAYC,IAAZ;AACA,aAAOA,IAAP;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACV,UAAMC,QAAQJ,gBAAgBK,IAAhB,CAAqBF,EAAEG,OAAvB,CAAd;AACA,UAAIF,KAAJ,EAAWH,OAAOC,MAAP,CAAcH,IAAd,EAAoBQ,OAAOH,MAAM,CAAN,CAAP,EAAiBA,MAAM,CAAN,CAAjB,CAApB,EAAX,KACK,MAAMD,CAAN;AACN;AACF;AACF;;AAED,SAASI,MAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3B,MAAID,SAAS,QAAb,EAAuB,OAAOE,aAAaD,IAAb,CAAP,CAAvB,KACK,OAAOE,cAAcF,IAAd,CAAP;AACN;;AAED,SAASC,YAAT,CAAuBD,IAAvB,EAA6B;AAC3B,MAAMG,QAAQ,uBAAaC,QAAb,CAAyBJ,IAAzB,QAAd;AACA,6BAAUA,IAAV,EAAiBG,KAAjB;AACD;;AAED,SAASD,aAAT,CAAwBF,IAAxB,EAA8B;AAC5B,MAAMK,WAAW,uBAAaD,QAAb,CAAyBJ,IAAzB,cAAjB;AACA,MAAMG,QAAQE,aAAa,GAA3B;AACA,6BAAUL,IAAV,EAAiBG,KAAjB;AACD","file":"input.js","sourcesContent":["import eztl from 'eztl';\nimport readlineSync from 'readline-sync';\n\nexport default function getVars (input, vars) {\n  const UNDEFINED_ERROR = /(.+) variable \"(.+)\" is undefined\\./;\n  vars = Object.assign({}, vars);\n\n  while (true) {\n    try {\n      eztl(input, vars);\n      return vars;\n    } catch (e) {\n      const match = UNDEFINED_ERROR.exec(e.message);\n      if (match) Object.assign(vars, prompt(match[1], match[2]));\n      else throw e;\n    }\n  }\n}\n\nfunction prompt (type, name) {\n  if (type === 'String') return promptString(name);\n  else return promptBoolean(name);\n}\n\nfunction promptString (name) {\n  const value = readlineSync.question(`${name}: `);\n  return { [name]: value };\n}\n\nfunction promptBoolean (name) {\n  const response = readlineSync.question(`${name} (Y/n): `);\n  const value = response !== 'n';\n  return { [name]: value };\n}\n"]}