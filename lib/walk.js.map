{"version":3,"sources":["../src/walk.js"],"names":["walk","dir","vars","folders","files","dirEntries","readdirSync","entry","entryPath","join","stat","statSync","Object","assign","fName","removeSync","newEntryPath","moveSync","isDirectory","push","walkResults","forEach","f","isFile"],"mappings":";;;;;kBAOwBA,I;;AAPxB;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEe,SAASA,IAAT,CAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvC,MAAMC,UAAU,EAAhB;AACA,MAAMC,QAAQ,EAAd;;AAEA,MAAMC,aAAa,kBAAGC,WAAH,CAAeL,GAAf,CAAnB;AAJuC;AAAA;AAAA;;AAAA;AAKvC,yBAAkBI,UAAlB,8HAA8B;AAAA,UAArBE,KAAqB;;AAC5B,UAAIC,YAAY,eAAKC,IAAL,CAAUR,GAAV,EAAeM,KAAf,CAAhB;AACA,UAAMG,OAAO,kBAAGC,QAAH,CAAYH,SAAZ,CAAb;;AAEAI,aAAOC,MAAP,CAAcX,IAAd,EAAoB,qBAAQK,KAAR,EAAeL,IAAf,CAApB;AACA,UAAMY,QAAQ,oBAAKP,KAAL,EAAYL,IAAZ,CAAd;AACA,UAAIY,UAAU,EAAd,EAAkB;AAChB,0BAAGC,UAAH,CAAcP,SAAd;AACA;AACD,OAHD,MAGO,IAAIM,UAAUP,KAAd,EAAqB;AAC1B,YAAMS,eAAe,eAAKP,IAAL,CAAUR,GAAV,EAAea,KAAf,CAArB;AACA,0BAAGG,QAAH,CAAYT,SAAZ,EAAuBQ,YAAvB;AACAR,oBAAYQ,YAAZ;AACD;;AAED,UAAIN,KAAKQ,WAAL,EAAJ,EAAwB;AACtBf,gBAAQgB,IAAR,CAAaX,SAAb;AACA,YAAMY,cAAcpB,KAAKQ,SAAL,EAAgBN,IAAhB,CAApB;AACAkB,oBAAYjB,OAAZ,CAAoBkB,OAApB,CAA4B;AAAA,iBAAKlB,QAAQgB,IAAR,CAAaG,CAAb,CAAL;AAAA,SAA5B;AACAF,oBAAYhB,KAAZ,CAAkBiB,OAAlB,CAA0B;AAAA,iBAAKjB,MAAMe,IAAN,CAAWG,CAAX,CAAL;AAAA,SAA1B;AACD,OALD,MAKO,IAAIZ,KAAKa,MAAL,EAAJ,EAAmB;AACxBnB,cAAMe,IAAN,CAAWX,SAAX;AACD;AACF;AA5BsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BvC,SAAO,EAAEL,gBAAF,EAAWC,YAAX,EAAP;AACD","file":"walk.js","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport eztl from 'eztl';\n\nimport getVars from './input.js';\n\nexport default function walk (dir, vars) {\n  const folders = [];\n  const files = [];\n\n  const dirEntries = fs.readdirSync(dir);\n  for (let entry of dirEntries) {\n    let entryPath = path.join(dir, entry);\n    const stat = fs.statSync(entryPath);\n\n    Object.assign(vars, getVars(entry, vars));\n    const fName = eztl(entry, vars);\n    if (fName === '') {\n      fs.removeSync(entryPath);\n      continue;\n    } else if (fName !== entry) {\n      const newEntryPath = path.join(dir, fName);\n      fs.moveSync(entryPath, newEntryPath);\n      entryPath = newEntryPath;\n    }\n\n    if (stat.isDirectory()) {\n      folders.push(entryPath);\n      const walkResults = walk(entryPath, vars);\n      walkResults.folders.forEach(f => folders.push(f));\n      walkResults.files.forEach(f => files.push(f));\n    } else if (stat.isFile()) {\n      files.push(entryPath);\n    }\n  }\n  return { folders, files };\n}\n"]}